// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
)

func (s *ErrRespStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

type AddUserBadRequest struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *AddUserBadRequest) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *AddUserBadRequest) SetMessage(val OptString) {
	s.Message = val
}

func (*AddUserBadRequest) addUserRes() {}

type AddUserInternalServerError struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *AddUserInternalServerError) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *AddUserInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

func (*AddUserInternalServerError) addUserRes() {}

type DeleteUserInternalServerError struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *DeleteUserInternalServerError) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *DeleteUserInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

func (*DeleteUserInternalServerError) deleteUserRes() {}

// DeleteUserNoContent is response for DeleteUser operation.
type DeleteUserNoContent struct{}

func (*DeleteUserNoContent) deleteUserRes() {}

type DeleteUserNotFound struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *DeleteUserNotFound) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *DeleteUserNotFound) SetMessage(val OptString) {
	s.Message = val
}

func (*DeleteUserNotFound) deleteUserRes() {}

type ErrResp struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *ErrResp) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *ErrResp) SetMessage(val OptString) {
	s.Message = val
}

// ErrRespStatusCode wraps ErrResp with StatusCode.
type ErrRespStatusCode struct {
	StatusCode int
	Response   ErrResp
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrRespStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrRespStatusCode) GetResponse() ErrResp {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrRespStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrRespStatusCode) SetResponse(val ErrResp) {
	s.Response = val
}

type GetUserInternalServerError struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *GetUserInternalServerError) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *GetUserInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

func (*GetUserInternalServerError) getUserRes() {}

type GetUserNotFound struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *GetUserNotFound) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *GetUserNotFound) SetMessage(val OptString) {
	s.Message = val
}

func (*GetUserNotFound) getUserRes() {}

// ListUsersBadRequest is response for ListUsers operation.
type ListUsersBadRequest struct{}

func (*ListUsersBadRequest) listUsersRes() {}

type ListUsersInternalServerError struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *ListUsersInternalServerError) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *ListUsersInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

func (*ListUsersInternalServerError) listUsersRes() {}

type ListUsersOKApplicationJSON []User

func (*ListUsersOKApplicationJSON) listUsersRes() {}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type UpdateUserBadRequest struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *UpdateUserBadRequest) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *UpdateUserBadRequest) SetMessage(val OptString) {
	s.Message = val
}

func (*UpdateUserBadRequest) updateUserRes() {}

type UpdateUserInternalServerError struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *UpdateUserInternalServerError) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *UpdateUserInternalServerError) SetMessage(val OptString) {
	s.Message = val
}

func (*UpdateUserInternalServerError) updateUserRes() {}

type UpdateUserNotFound struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *UpdateUserNotFound) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *UpdateUserNotFound) SetMessage(val OptString) {
	s.Message = val
}

func (*UpdateUserNotFound) updateUserRes() {}

// Ref: #/components/schemas/User
type User struct {
	ID    OptInt64  `json:"id"`
	Name  string    `json:"name"`
	Email OptString `json:"email"`
}

// GetID returns the value of ID.
func (s *User) GetID() OptInt64 {
	return s.ID
}

// GetName returns the value of Name.
func (s *User) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *User) GetEmail() OptString {
	return s.Email
}

// SetID sets the value of ID.
func (s *User) SetID(val OptInt64) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *User) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *User) SetEmail(val OptString) {
	s.Email = val
}

func (*User) addUserRes()    {}
func (*User) getUserRes()    {}
func (*User) updateUserRes() {}
