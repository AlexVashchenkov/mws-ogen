openapi: 3.0.2
servers:
  - url: /v3
info:
  version: 1.0.0
  title: User in-memory storage
tags:
  - name: user
    description: Implementing an in-memory User storage client-server communication
paths:
  /user:
    post:
      tags:
        - user
      summary: Adding user to the storage
      description: Adding user to the storage
      operationId: addUser
      requestBody:
        description: Add a new User to the storage
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/User'
      responses:  
        '201':
          description: User successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    get:
        tags:
          - user
        summary: Get all Users from the storage
        description: Get all Users from the storage
        operationId: listUsers
        responses:  
          '200':
            description: List of users
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/User'
          '400':
            description: Invalid input data
            content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          default:
            description: Unexpected error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
      
  '/user/{userId}':
    get:
      tags:
        - user
      summary: Get a User by its ID
      description: Get a User by its ID
      operationId: getUser
      parameters:
        - name: userId
          in: path
          description: ID of User to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    post:
      tags:
        - user
      summary: Update an existing User in storage
      description: Update an existing User in storage
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          description: ID of User to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      tags:
        - user
      summary: Delete an existing User in storage
      description: Delete an existing User in storage
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          description: ID of User to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Alexey"
        email:
          type: string
          example: "litmo@litmo.ru"
      required:
        - name